# Build configuration copied from https://github.com/bazelbuild/rules_dotnet which is licensed Apache-2.0 License.
# License can be founder here: https://github.com/bazelbuild/rules_dotnet/blob/master/LICENSE.txt
# Adapted for the needs of FlatlandRT

jobs:
  - job: BuildAndTest
    strategy:
      matrix:
        linux:
          poolName: 'Azure Pipelines'
          vmImage: 'ubuntu-20.04'
          systemName: 'linux'
          bazel_startup: '--host_jvm_args=-Xmx500m --host_jvm_args=-Xms500m'
        windows:
          poolName: 'Azure Pipelines'
          vmImage: 'windows-2019'
          systemName: 'windows'
          bazel_startup: '--output_user_root=c:\tmp --host_jvm_args=-Xmx500m --host_jvm_args=-Xms500m'
        #mac:
        #  poolName: 'Azure Pipelines'
        #  vmImage: 'macOS-10.15'
        #  systemName: 'mac'
        #  bazel_startup: '--host_jvm_args=-Xmx500m --host_jvm_args=-Xms500m'
    pool:
      name: $(poolName)
      vmImage: $(vmImage)


    steps:
      - script: |
          echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
          sudo apt-get update && sudo apt-get install -y bazel
        displayName: 'Install dependencies'
        condition: and(succeeded(), eq(variables['systemName'], 'linux'))

      - script: |
          choco install bazel
        displayName: 'Install dependencies'
        condition: and(succeeded(), eq(variables['systemName'], 'windows'))

      #- script: |
      #    rm /usr/local/bin/bazel || true
      #    brew list bazelisk && brew remove bazelisk
      #    brew list bazel && brew remove bazel
      #    brew list bazel || brew install bazel
      #    brew install coreutils
      #  displayName: 'Install dependencies osx'
      #  condition: and(succeeded(), eq(variables['systemName'], 'mac'))

      - script: |
          bazel version
        displayName: 'Show bazel version'

      - script: |
          bazel $(bazel_startup) build --config=ubuntu20_04_x64 -- //srcs/...
        displayName: 'Bazel build GCC'
        condition: and(succeeded(), eq(variables['systemName'], 'linux'))

      - script: |
          bazel $(bazel_startup) test --config=ubuntu20_04_x64 -- //... -//tests/third_party:TestBoost
        displayName: 'Bazel test GCC'
        condition: and(succeeded(), eq(variables['systemName'], 'linux'))


      - script: |
          bazel $(bazel_startup) build --config=ubuntu20_04_x64_llvm -- //srcs/...
        displayName: 'Bazel build LLVM'
        condition: and(succeeded(), eq(variables['systemName'], 'linux'))

      - script: |
          bazel $(bazel_startup) test --config=ubuntu20_04_x64_llvm -- //... -//tests/third_party:TestBoost
        displayName: 'Bazel test LLVM'
        condition: and(succeeded(), eq(variables['systemName'], 'linux'))

      - script: |
          bazel $(bazel_startup) build --config=windows10_x64 -- //srcs/...
        displayName: 'bazel build'
        condition: and(succeeded(), eq(variables['systemName'], 'windows'))

      - script: |
          bazel $(bazel_startup) test --config=windows10_x64 -- //... -//tests/third_party:TestBoost -//tests/acceptance_tests:acceptance_test
        displayName: 'bazel test'
        condition: and(succeeded(), eq(variables['systemName'], 'windows'))
