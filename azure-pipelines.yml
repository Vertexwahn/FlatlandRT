#
#   SPDX-FileCopyrightText: 2022 Julian Amann <dev@vertexwahn.de>
#   SPDX-License-Identifier: Apache-2.0
#


jobs:
  - job: MacOSAppleClang14Monterey
    displayName: "Apple Clang14 on macOS 12 (Monterey)"
    pool:
      vmImage: 'macOS-12'
    steps:
      - template: devertexwahn/ci/macOS-12-apple-clang14.yaml


  - job: MacOSAppleClang14Ventura
    displayName: "Apple Clang14 on macOS 13 (Ventura)"
    pool:
      vmImage: 'macOS-13'
    steps:
      - template: devertexwahn/ci/macOS-13-apple-clang14.yaml

  # macOS 14/M1 is still not supported on Azure Pipelines
  # consult documentation for Microsoft-hosted agents: 
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml
  #- job: MacOSAppleClang14Sonoma
  #  displayName: "Apple Clang14 on macOS 14 (Sonoma)"
  #  pool:
  #    vmImage: 'macOS-14'
  #  steps:
  #    - template: devertexwahn/ci/macOS-14-apple-clang14.yaml


  #- job: Ubuntu20Clang14
  #  displayName: "Clang14 on Ubuntu 20.04"
  #  pool:
  #    vmImage: 'ubuntu-20.04'
  #  steps:
  #    - template: devertexwahn/ci/ubuntu-20.04-clang14.yaml

  - job: Ubuntu20GCC9Fast
    displayName: "GCC9 fast on Ubuntu 20.04"
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: devertexwahn/ci/ubuntu-20.04-gcc9-fast.yaml
  
  - job: Ubuntu20GCC9Opt
    displayName: "GCC9 opt on Ubuntu 20.04"
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: devertexwahn/ci/ubuntu-20.04-gcc9-opt.yaml

  - job: Ubuntu20GCC9DebugPart1
    displayName: "GCC9 debug on Ubuntu 20.04 (Part 1)"
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: devertexwahn/ci/ubuntu-20.04-gcc9-dbg-part1.yaml

  - job: Ubuntu20GCC9DebugPart2
    displayName: "GCC9 debug on Ubuntu 20.04 (Part 2)"
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: devertexwahn/ci/ubuntu-20.04-gcc9-dbg-part2.yaml

  - job: Ubuntu22BazelQuery
    displayName: "Bazel query on Ubuntu 22.04"
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: devertexwahn/ci/ubuntu-22.04-bazel-query.yaml

  - job: Ubuntu22Clang16
    displayName: "Clang16 on Ubuntu 22.04"
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: devertexwahn/ci/ubuntu-22.04-clang16.yaml


  - job: Ubuntu22Bzlmod
    displayName: "Bzlmod on Ubuntu 22.04"
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: devertexwahn/ci/ubuntu-22.04-gcc11-bzlmod.yaml

  - job: Ubuntu22GCC11
    displayName: "GCC11 fast opt on Ubuntu 22.04"
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: devertexwahn/ci/ubuntu-22.04-gcc11-fast-opt.yaml

  - job: Ubuntu22GCC11DebugPart1
    displayName: "GCC11 dbg on Ubuntu 22.04 (Part 1)"
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: devertexwahn/ci/ubuntu-22.04-gcc11-dbg-part1.yaml

  - job: Ubuntu22GCC11DebugPart2
    displayName: "GCC11 dbg on Ubuntu 22.04 (Part 2)"
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - template: devertexwahn/ci/ubuntu-22.04-gcc11-dbg-part2.yaml
  
  # Visual Studio 2019
  - job: VisualStudio2019Dbg
    displayName: "VS2019 debug on Windows Server 2019"
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: devertexwahn/ci/windows-2019-vs2019-dbg.yaml

  - job: VisualStudio2019Fastbuild
    displayName: "VS2019 fastbuild on Windows Server 2019"
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: devertexwahn/ci/windows-2019-vs2019-fastbuild.yaml

  - job: VisualStudio2019Opt
    displayName: "VS2019 opt on Windows Server 2019"
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: devertexwahn/ci/windows-2019-vs2019-opt.yaml

  # Visual Studio 2022
  - job: VisualStudio2022Dbg
    displayName: "VS2022 dbg on Windows Server 2022"
    pool:
      vmImage: 'windows-2022'
    steps:
      - template: devertexwahn/ci/windows-2022-vs2022-dbg.yaml

  - job: VisualStudio2022Fastbuild
    displayName: "VS2022 fastbuild on Windows Server 2022"
    pool:
      vmImage: 'windows-2022'
    steps:
      - template: devertexwahn/ci/windows-2022-vs2022-fastbuild.yaml

  - job: VisualStudio2022Opt
    displayName: "VS2022 opt on Windows Server 2022"
    pool:
      vmImage: 'windows-2022'
    steps:
      - template: devertexwahn/ci/windows-2022-vs2022-opt.yaml
