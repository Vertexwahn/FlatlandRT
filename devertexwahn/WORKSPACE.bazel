"""
    SPDX-FileCopyrightText: Copyright 2022-2023 Julian Amann <dev@vertexwahn.de>
    SPDX-License-Identifier: Apache-2.0
"""

workspace(name = "de_vertexwahn")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("//okapi/third_party:okapi_deps.bzl", "okapi_deps")

#-------------------------------------------------------------------------------------

okapi_deps()

#-------------------------------------------------------------------------------------
# Python
#-------------------------------------------------------------------------------------

load("@rules_python//python:pip.bzl", "pip_parse")

# Create a central repo that knows about the dependencies needed from
# requirements_lock.txt.
pip_parse(
    name = "my_deps",
    requirements_lock = "//:requirements.txt",
)

# Load the starlark macro which will define your dependencies.
load("@my_deps//:requirements.bzl", "install_deps")

# Call it to define repos for your requirements.
install_deps()

# Boost deps
load("@com_github_nelhage_rules_boost//:boost/boost.bzl", "boost_deps")

boost_deps()


#-------------------------------------------------------------------------------------
# OpenEXR
#-------------------------------------------------------------------------------------
load("@com_openexr//:bazel/third_party/openexr_deps.bzl", "openexr_deps")

openexr_deps()

#-------------------------------------------------------------------------------------
# LLVM Toolchain
#-------------------------------------------------------------------------------------

load("@com_grail_bazel_toolchain//toolchain:deps.bzl", "bazel_toolchain_dependencies")

bazel_toolchain_dependencies()

load("@com_grail_bazel_toolchain//toolchain:rules.bzl", "llvm_toolchain")

llvm_toolchain(
    name = "llvm_toolchain",
    #llvm_version = "15.0.6",
    llvm_version = "14.0.0",
)

load("@llvm_toolchain//:toolchains.bzl", "llvm_register_toolchains")

llvm_register_toolchains()

#-------------------------------------------------------------------------------------
# Pkg
#-------------------------------------------------------------------------------------

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")

rules_pkg_dependencies()

