"""
    SPDX-FileCopyrightText: Copyright 2024 Julian Amann <dev@vertexwahn.de>
    SPDX-License-Identifier: Apache-2.0
"""

"""FlatlandRT build and test dependencies."""

module(
    name = "de_vertexwahn",
    version = "0.0.1",
)

bazel_dep(name = "abseil-cpp", version = "20240722.0")
bazel_dep(name = "apple_support", version = "1.17.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "boost.algorithm", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.asio", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.core", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.predef", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.program_options", version = "1.83.0.bcr.1")
bazel_dep(name = "boost.uuid", version = "1.83.0.bcr.1")
bazel_dep(name = "eigen", version = "3.4.0.bcr.1")
bazel_dep(name = "fmt", version = "11.0.2")
bazel_dep(name = "gazelle", version = "0.38.0")
bazel_dep(name = "hypothesis")
bazel_dep(name = "imath", version = "3.1.12")
bazel_dep(name = "libdeflate", version = "1.22")
bazel_dep(name = "libjpeg_turbo", version = "2.1.4")
bazel_dep(name = "libpng", version = "1.6.43")
bazel_dep(name = "libwebp", version = "1.4.0")
bazel_dep(name = "nasm", version = "2.14.02")
bazel_dep(name = "nlohmann_json", version = "3.11.3")
bazel_dep(name = "openexr", version = "3.2.4")
bazel_dep(name = "pcg", version = "0.98.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "pugixml", version = "1.14")
bazel_dep(name = "rules_cc", version = "0.0.12")
bazel_dep(name = "rules_license", version = "0.0.8")
bazel_dep(name = "rules_pkg", version = "0.10.1")
bazel_dep(name = "rules_python", version = "0.36.0")
bazel_dep(name = "spdlog", version = "1.14.1")
bazel_dep(name = "xtensor")
bazel_dep(name = "xtl")
bazel_dep(name = "yaml-cpp", version = "0.8.0")
bazel_dep(name = "zlib", version = "1.3.1.bcr.3")

bazel_dep(name = "aspect_rules_lint", version = "1.0.2", dev_dependency = True)
bazel_dep(name = "catch2", version = "3.5.4", dev_dependency = True)
bazel_dep(name = "google_benchmark", version = "1.8.5", dev_dependency = True)
bazel_dep(name = "googletest", version = "1.15.2", dev_dependency = True)

# This projects intends to stay as close as possible to upstream dependencies (Live at Head). Therefore, upstream
# dependencies are copied on a regular basis 1:1 with some Bazel related patches (if needed) to the `third_party` folder
# and overridden here. If you do not like this approach you can simply remove most of the local_path_override's here and
# live with the newest versions in the BCR (which can be much older).
# Note: Some dependencies are not part in the BCR (such as pcg or xtl) and therefore the local_path_override is needed
# here for some libraries.

local_path_override(
    module_name = "abseil-cpp",
    path = "../third_party/abseil-cpp",
)

local_path_override(
    module_name = "bazel_skylib",
    path = "../third_party/bazel-skylib",
)

local_path_override(
    module_name = "catch2",
    path = "../third_party/Catch2",
)

#local_path_override(
#    module_name = "fmt",
#    path = "../third_party/fmt",
#)

local_path_override(
    module_name = "imath",
    path = "../third_party/Imath",
)

local_path_override(
    module_name = "libpng",
    path = "../third_party/libpng-1.6.43",
)

local_path_override(
    module_name = "hypothesis",
    path = "../third_party/hypothesis",
)

local_path_override(
    module_name = "openexr",
    path = "../third_party/openexr",
)

local_path_override(
    module_name = "pcg",
    path = "../third_party/pcg-cpp",
)

local_path_override(
    module_name = "pugixml",
    path = "../third_party/pugixml",
)

local_path_override(
    module_name = "xtensor",
    path = "../third_party/xtensor",
)

local_path_override(
    module_name = "xtl",
    path = "../third_party/xtl",
)

local_path_override(
    module_name = "spdlog",
    path = "../third_party/spdlog",
)

local_path_override(
    module_name = "yaml-cpp",
    path = "../third_party/yaml-cpp",
)

#-------------------------------------------------------------------------------------
# LLVM toolchain for bazel
#-------------------------------------------------------------------------------------

bazel_dep(name = "toolchains_llvm", version = "0.10.3")
git_override(
    module_name = "toolchains_llvm",
    commit = "bba94f8138ab454d70afcd263788b34e2801e2ba",
    remote = "https://github.com/bazel-contrib/toolchains_llvm.git",
)

bazel_dep(name = "rules_foreign_cc", version = "0.10.1")

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")

LLVM_VERSIONS = {
    "": "16.0.0",  # Default version 16.0.0
    "darwin-aarch64": "16.0.5",
    "darwin-x86_64": "15.0.7",
}

llvm.toolchain(
    name = "llvm_toolchain",
    llvm_versions = LLVM_VERSIONS,
)
use_repo(llvm, "llvm_toolchain", "llvm_toolchain_llvm")

register_toolchains("@llvm_toolchain//:all")

#-------------------------------------------------------------------------------------
# Python
#-------------------------------------------------------------------------------------

python = use_extension("@rules_python//python/extensions:python.bzl", "python")

#python.toolchain(
#    python_version = "3.11",
#)
use_repo(python, "python_versions")
