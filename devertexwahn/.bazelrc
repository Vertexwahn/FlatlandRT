#
#   SPDX-FileCopyrightText: 2022 Julian Amann <dev@vertexwahn.de>
#   SPDX-License-Identifier: Apache-2.0
#

# Supported OS identifiers are linux, macos, windows, freebsd, and openbsd.
# Ignored for now - details here: https://stackoverflow.com/questions/73873449/can-enable-platform-specific-config-be-ignored-or-overriden
# build --enable_platform_specific_config

build --symlink_prefix=/ # Suppress symlink creation (to avoid untracked files issues with git)

# GCC 9.3
build:gcc9 --cxxopt=-std=c++2a
build:gcc9 --cxxopt=-Wall
build:gcc9 --cxxopt=-Werror
##build:gcc9 --cxxopt=-Wextra

build:remote_gcc9 --cxxopt=-Wall
build:remote_gcc9 --cxxopt=-Werror
##build:remote_gcc9 --cxxopt=-Wextra

# GCC 11.2
#build:gcc11 --cxxopt=-std=c++23 # blocked by emsdk
build:gcc11 --cxxopt=-std=c++20
build:gcc11 --cxxopt=-Wall
#build:gcc11 --cxxopt=-Werror
#build:gcc11 --cxxopt=-Wno-error=volatile # blocked by emsdk
##build:gcc11 --cxxopt=-Wextra

build:linux --config=gcc11

# macOS (e.g. Clang 12.0.0)
build:macos --cxxopt=-std=c++2a
build:macos --cxxopt=-Wall
#build:macos --cxxopt=-Werror # Commented out because of Embree
##build:macos --cxxopt=-Wextra
#build:macos --spawn_strategy=local

# Todo: Add apple_debug config
# https://github.com/RobotLocomotion/drake/search?q=apple_debug

# Clang 14.0.0
build:clang14 --cxxopt=-std=c++17
#build:clang14 --cxxopt=-mavx
#build:clang14 --cxxopt=-mavx2
#build:clang14 --cxxopt=-msse4.2
#build:clang14 --cxxopt=-Werror
build:clang14 --incompatible_enable_cc_toolchain_resolution
build:clang14 --cxxopt=-mwaitpkg

# Mingw
build:mingw --cxxopt=-std=c++2a
#build:mingw --cxxopt=-Wall
#build:mingw --cxxopt=-Werror
#build:mingw --cxxopt=-Wextra

# Visual Studio 2019
build:vs2019 --cxxopt=/std:c++20
build:vs2019 --cxxopt=/Zc:__cplusplus
build:vs2019 --enable_runfiles # https://github.com/bazelbuild/bazel/issues/8843
build:vs2019 --copt=-DWIN32_LEAN_AND_MEAN
build:vs2019 --copt=-DNOGDI
build:vs2019 --host_copt=-DWIN32_LEAN_AND_MEAN
build:vs2019 --host_copt=-DNOGDI

# Visual Studio 2022
build:vs2022 --cxxopt=/std:c++20
build:vs2022 --cxxopt=/Zc:__cplusplus
build:vs2022 --enable_runfiles # https://github.com/bazelbuild/bazel/issues/8843
build:vs2022 --copt=-DWIN32_LEAN_AND_MEAN
build:vs2022 --copt=-DNOGDI
build:vs2022 --host_copt=-DWIN32_LEAN_AND_MEAN
build:vs2022 --host_copt=-DNOGDI

build:windows --config=vs2022

# Address Sanitizer
build:asan --config=gcc9
build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -O1
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

# clang-tidy
build:clang-tidy --aspects @bazel_clang_tidy//clang_tidy:clang_tidy.bzl%clang_tidy_aspect
build:clang-tidy --output_groups=report
build:clang-tidy --@bazel_clang_tidy//:clang_tidy_config=//:clang_tidy_config2
build:clang-tidy --cxxopt=-std=c++17

# Optimized build
build:optimized build --copt=-O3

try-import %workspace%/.bazelrc.remote_cache
